#!/usr/bin/env php
<?php

define('NAME_LEVEL', 1);
if (count($argv) === 1) {
	echo "Missing source directory parameter\n";
	exit(2);
}
define('WORK_ROOT', $argv[1]);
$base = substr(WORK_ROOT, -1) == '/'
	? substr(WORK_ROOT, 0, -1)
	: WORK_ROOT;

define('WORK_DONE', $base . '_DONE_' . time());
if (!file_exists(WORK_ROOT)) {
	echo "Directory provided is not accessible\n";
	exit(3);
}

exec('/usr/bin/find '.WORK_ROOT.' -type f', $lines);
$total = $current = count($lines);
$cache = array();
$rotate = array('', '|', '/', '-', '\\', '|', '/', '-', '\\');

if (!mkdir(WORK_DONE)) {
	echo "Cannot write output directory\n";
	exit(4);
}

traverseDeep(WORK_ROOT);
echo "\nDone!\n";

function traverseDeep($loc, $level = NAME_LEVEL, $pref = '') {
	foreach (new DirectoryIterator($loc) as $fileInfo) {
		if ($fileInfo->isDot()) {
			continue;
		}
		if (!$fileInfo->isDir()) {
			continue;
		}
		$name = $fileInfo->getFilename();
		if ($level !== 0) {
			traverseDeep("{$loc}/{$name}", $level - 1, "$pref\t");
		} else {
			process($loc, $name);
		}
	}
}


function getName($source) {
	return preg_replace('/[^a-zA-Z0-9]/', '', $source);
}


function padIter($iter) {
	if ($iter > 99) {
		return "_0$iter";
	}
	if ($iter > 9) {
		return "_00$iter";
	}
	return "_000$iter";
}


function process($loc, $dirName, $iter = 0) {
	global $total, $current, $cache, $rotate;
	foreach (new DirectoryIterator("$loc/$dirName") as $fileInfo) {
		if ($fileInfo->isDot()) {
			continue;
		}
		if ($fileInfo->isDir()) {
			continue;
			//$iter = process("$loc/".$fileInfo->getFilename(), $dirName, $iter);
		}
		$prevName = $fileInfo->getFilename();
		$ext = $fileInfo->getExtension();

		$name = getName($dirName) . padIter($iter);
		$res = copy("$loc/$dirName/$prevName", WORK_DONE . "/{$name}.{$ext}");
		if (!$res) {
			echo "\nError: Cannot copy file {$name}.\n";
			exit(2);
		}
		system('clear');
		$curr = ($total - --$current);
		echo "Processing file ". $curr . " of " . $total . "  " . $rotate[$curr % 9];
		$iter++;
	}

	return $iter;
}

?>
