#!/usr/bin/env php
<?php

define('NAME_LEVEL', 1);
if (count($argv) === 1) {
	echo "Missing source directory parameter\n";
	exit(2);
}
define('WORK_ROOT', $argv[1]);
$base = substr(WORK_ROOT, -1) == '/'
	? substr(WORK_ROOT, 0, -1)
	: WORK_ROOT;

define('WORK_DONE', $base . '_DONE_' . time());
if (!file_exists(WORK_ROOT)) {
	echo "Directory provided is not accessible\n";
	exit(3);
}

exec('/usr/bin/find '.WORK_ROOT.' -type f', $lines);
$total = $current = count($lines);

if (!mkdir(WORK_DONE)) {
	echo "Cannot create output directory\n";
	exit(4);
}

traverseDeep(WORK_ROOT);
echo "\nDone!\n";

function traverseDeep($loc, $level = NAME_LEVEL) {
	foreach (new DirectoryIterator($loc) as $fileInfo) {
		if ($fileInfo->isDot()) {
			continue;
		}
		if (!$fileInfo->isDir()) {
			continue;
		}
		$name = $fileInfo->getFilename();
		if ($level !== 0) {
			traverseDeep("{$loc}/{$name}", $level - 1);
		} else {
			process("$loc/$name", $name);
		}
	}
}


function getName($source) {
	return preg_replace('/[^a-zA-Z0-9]/', '', $source);
}


function process($loc, $name) {
	global $total, $current;
	$rotate = array('', '|', '/', '-', '\\', '|', '/', '-', '\\');
	foreach (new DirectoryIterator($loc) as $fileInfo) {
		if ($fileInfo->isDot()) {
			continue;
		}
		if ($fileInfo->isDir()) {
			return process("{$loc}/" . $fileInfo->getFilename(), $name);
		}
		$ext = $fileInfo->getExtension();
		$prevName = $fileInfo->getBaseName(".{$ext}");
		$newName = WORK_DONE ."/". getName($name) ."_". getName($prevName);

		if (file_exists("$newName.$ext")) {
			file_put_contents(WORK_DONE . "/!!debug", "$newName\n", FILE_APPEND);
		}

		$res = copy("{$loc}/{$prevName}.{$ext}", "{$newName}.{$ext}");
		if (!$res) {
			echo "\nError: Cannot copy file {$newName}.\n";
			exit(5);
		}
		system('clear');
		$curr = ($total - --$current);

		echo "Processing ". $rotate[$curr % 9] . ' ' . (int)($curr / $total * 100) . '%';
	}

	return;
}
?>
